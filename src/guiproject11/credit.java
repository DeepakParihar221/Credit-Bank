package guiproject11;


import java.awt.EventQueue;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.*;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPasswordField;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 91907
 
public class credit extends javax.swing.JFrame {

    /**
     * Creates new form credit
     
    public credit() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    */ 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

public class credit {

	protected JFrame frame;
	private JLabel lblStudentId;
	private JTextField textField;
	private JTable table;
	private JScrollPane scrollPane;
	private JPasswordField passwordField;
	private JLabel lblNewLabel;
	private JLabel lblStudentLogin;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
                                        credit window = new credit();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public credit() {
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frame = new JFrame();
		frame.setBounds(100, 100, 988, 605);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		
		lblStudentId = new JLabel("Student ID");
		lblStudentId.setFont(new Font("Tahoma", Font.PLAIN, 16));
		lblStudentId.setBounds(69, 135, 86, 28);
		frame.getContentPane().add(lblStudentId);
		
		textField = new JTextField();
		textField.setFont(new Font("Tahoma", Font.PLAIN, 16));
		textField.setBounds(216, 131, 200, 41);
		frame.getContentPane().add(textField);
		textField.setColumns(10);
		
		scrollPane = new JScrollPane();
		scrollPane.setBounds(0, 249, 974, 319);
		frame.getContentPane().add(scrollPane);
		
		table = new JTable();
		scrollPane.setViewportView(table);
		
		DefaultTableModel model = (DefaultTableModel) table.getModel();
		model.addColumn("ID");
		model.addColumn("Total Credits");
                model.addColumn("Sem");
		model.addColumn("Type Of Degree");
		
		JButton btnCheckDetail = new JButton("Check Credit");
		btnCheckDetail.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				String student_id = textField.getText();
				
				
				try {
					Class.forName("com.mysql.cj.jdbc.Driver");
					Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/credit_bank?autoReconnect=true&useSSL=false", "root", "root");
					
					PreparedStatement ps =  conn.prepareStatement("Select * from studentcredit where Id="+student_id);
                                        PreparedStatement pst =  conn.prepareStatement("Select * from studentinformation where Id="+student_id);
					ResultSet rs = ps.executeQuery();
					ResultSet rs1 = pst.executeQuery();
					while(rs.next()&&rs1.next())
					{
						model.addRow(new Object[] {rs.getString("Id"), rs.getString("TotalCredit"), rs1.getString("CurrentSem"), rs.getString("TypeOfDegree")});
					}
					
				}
				catch(Exception e2)
				{
					System.out.println(e2);
				}

				
			}
		});
		btnCheckDetail.setFont(new Font("Arial", Font.BOLD, 16));
		btnCheckDetail.setBounds(417, 192, 151, 41);
		frame.getContentPane().add(btnCheckDetail);
		
		passwordField = new JPasswordField();
		passwordField.setFont(new Font("Tahoma", Font.PLAIN, 16));
		passwordField.setBounds(652, 131, 200, 41);
		frame.getContentPane().add(passwordField);
		
		lblNewLabel = new JLabel("Password");
		lblNewLabel.setFont(new Font("Tahoma", Font.PLAIN, 16));
		lblNewLabel.setBounds(510, 132, 99, 34);
		frame.getContentPane().add(lblNewLabel);
		
		lblStudentLogin = new JLabel("Check Credits");
		lblStudentLogin.setFont(new Font("Tahoma", Font.BOLD, 22));
		lblStudentLogin.setBounds(403, 25, 181, 50);
		frame.getContentPane().add(lblStudentLogin);
		
		
		
		
	}
	
	
	
}
